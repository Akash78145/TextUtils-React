{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","msg","Navbar","mode","href","title","id","onClick","toogleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","target","value","showAlert","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","length","App","setMode","setAlert","message","setTimeout","aboutText","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMAaeA,EAXM,SAACC,GAGlB,OACGA,EAAMC,OAAS,sBAAKC,UAAS,sBAAiBF,EAAMC,MAAME,KAA7B,gCAAiEC,KAAK,QAApF,UACf,uCAAUJ,EAAMC,MAAME,QADP,IACuBH,EAAMC,MAAMI,QCH1C,SAASC,EAAON,GAC3B,OACI,qBAAKE,UAAS,yCAAoCF,EAAMO,KAA1C,eAAqDP,EAAMO,MAAzE,SACJ,sBAAKL,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeM,KAAK,IAAjC,SAAsCR,EAAMS,QAC5C,wBAAQP,UAAU,iBAAiBC,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMD,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BQ,GAAG,yBAA7C,UACE,oBAAIR,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SAEE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOM,KAAK,IAAxD,sBAUR,sBAAKN,UAAS,sCAA8C,UAAbF,EAAMO,KAAe,OAAO,SAA3E,UACF,uBAAOL,UAAU,mBAAmBS,QAASX,EAAMY,WAAYT,KAAK,WAAWC,KAAK,SAASM,GAAG,2BAChG,uBAAOR,UAAU,mBAAmBW,QAAQ,yBAA5C,wCCxBa,SAASC,EAASd,GAC/B,IAqBA,EAAwBe,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACE,qCACE,sBAAKf,UAAU,YAAYgB,MAAO,CAACC,MAAmB,SAAbnB,EAAMO,KAAc,QAAQ,WAArE,UACE,6BAAKP,EAAMoB,UACX,qBAAKlB,UAAU,OAAf,SACE,0BAAUA,UAAU,eAAemB,SAdpB,SAACC,GAEtBL,EAAQK,EAAMC,OAAOC,OACrBxB,EAAMyB,aAW6DP,MAAO,CAACQ,gBAA6B,SAAb1B,EAAMO,KAAc,OAAO,QAAQY,MAAmB,SAAbnB,EAAMO,KAAc,QAAQ,WAAYiB,MAAOR,EAAMN,GAAG,QAAQiB,KAAK,QAErM,wBAAQzB,UAAU,uBAAuBS,QA/BzB,WACpB,IAAIiB,EAAUZ,EAAKa,cACnBZ,EAAQW,GACR5B,EAAMyB,UAAU,yBAAyB,YA4BrC,kCACA,wBAAQvB,UAAU,uBAAuBS,QA1BzB,WACpB,IAAIiB,EAAUZ,EAAKc,cACnBb,EAAQW,GACR5B,EAAMyB,UAAU,yBAAyB,WAuBrC,kCACA,wBAAQvB,UAAU,uBAAuBS,QAtBtB,WAEvBM,EADc,KAqBV,2BAEF,sBAAKf,UAAU,iBAAiBgB,MAAO,CAACC,MAAoB,SAAbnB,EAAMO,KAAc,QAAQ,WAA3E,UACA,mDACA,8BAAIS,EAAKe,MAAM,KAAKC,OAApB,cAAuChB,EAAKgB,OAA5C,gBACA,8BAAI,KAAQhB,EAAKe,MAAM,KAAKC,OAA5B,cACA,yCACA,4BAAIhB,EAAKgB,OAAO,EAAIhB,EAAO,4DCalBiB,MAlDf,WACE,MAAwBlB,mBAAS,SAAjC,mBAAOR,EAAP,KAAa2B,EAAb,KACA,EAA0BnB,mBAAS,MAAnC,mBAAOd,EAAP,KAAckC,EAAd,KAEMV,EAAY,SAACW,EAASjC,GAC1BgC,EAAS,CACP9B,IAAK+B,EACLjC,KAAMA,IAERkC,YAAW,WACTF,EAAS,QACR,OAgBL,OACE,qCAGE,cAAC7B,EAAD,CAAQG,MAAM,YAAYF,KAAMA,EAAM+B,UAAU,WAAW1B,WAjB5C,WACJ,UAATL,GACF2B,EAAQ,QACRK,SAASC,KAAKtB,MAAMQ,gBAAkB,UACtCD,EAAU,6BAA8B,aAGxCS,EAAQ,SACRK,SAASC,KAAKtB,MAAMQ,gBAAkB,QACtCD,EAAU,8BAA+B,eASzC,cAAC,EAAD,CAAOxB,MAAOA,IAEd,qBAAKC,UAAU,iBAAf,SAOM,cAACY,EAAD,CAAUW,UAAWA,EAAWL,QAAQ,4BAA4Bb,KAAMA,UCrCvEkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,SAM1BZ,K","file":"static/js/main.98d7b09d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Alert = (props) => {\r\n    \r\n    \r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong> {props.alert.type}</strong>:{props.alert.msg}\r\n  \r\n  \r\n</div>\r\n    )\r\n}\r\nexport default Alert;","import React from 'react';\r\nimport PropTypes  from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          </li> */}\r\n        </ul>\r\n        {/*<form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn -primary\" type=\"submit\">Search</button>\r\n    </form>*/}\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toogleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Drk mode</label>\r\n</div>\r\n       </div>  \r\n    </div>\r\n  </nav>\r\n    )\r\n}\r\n// Navbar.defaultProps = {title: 'Set title Here',\r\n//                        aboutText:'About Text Here'};\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                     aboutText: PropTypes.string}","import React, { useState } from 'react';\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\",\"success\");\r\n\r\n  }\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase\",\"danger\");\r\n  }\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  }\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n    props.showAlert();\r\n  }\r\n\r\n  const [text, setText] = useState('');\r\n  // setText=(\"new Text\");\r\n  // setText(\"New Text\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} value={text} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} character</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0 ? text : \"Enter something in the textbox to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');// Weather dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toogleMode = () => {\n    if (mode === 'light') {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n\n    }\n  }\n  return (\n    <>\n     {/*<Router>*/}\n\n      <Navbar title=\"TextUtils\" mode={mode} aboutText=\"About Us\" toogleMode={toogleMode} />\n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\">\n        {/* <Switch>\n          <Route exact path=\"/about\" >\n           <About/>\n           </Route>\n          \n        <Route path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n        {/*  </Route>\n        </Switch>*/ }\n      </div>\n {/* </Router> */}\n </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}